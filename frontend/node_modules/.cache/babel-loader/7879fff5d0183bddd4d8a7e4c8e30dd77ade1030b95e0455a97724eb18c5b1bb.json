{"ast":null,"code":"var _jsxFileName = \"D:\\\\Crop_Yield_React\\\\frontend\\\\src\\\\components\\\\MetricsSlideshow\\\\MetricsSlideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MetricsSlideshow.css';\n\n// Import metrics images\nimport metric1 from '../assets/actual_vs_predicted_comparison.png';\nimport metric2 from '../assets/dtr_learning_curve.png';\nimport metric3 from '../assets/knn_learning_curve.png';\n// Add more imports as needed based on your actual metric images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsSlideshow = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const metricsImages = [{\n    src: metric1,\n    alt: \"Metric 1\"\n  }, {\n    src: metric2,\n    alt: \"Metric 2\"\n  }, {\n    src: metric3,\n    alt: \"Metric 3\"\n  }\n  // Add more metric images as needed\n  ];\n  const nextSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === metricsImages.length - 1 ? 0 : prevIndex + 1);\n  };\n  const prevSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? metricsImages.length - 1 : prevIndex - 1);\n  };\n\n  // Close the slideshow when Escape key is pressed\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      } else if (e.key === 'ArrowRight') {\n        nextSlide();\n      } else if (e.key === 'ArrowLeft') {\n        prevSlide();\n      }\n    };\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metrics-slideshow-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-slideshow-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: metricsImages[currentIndex].src,\n          alt: metricsImages[currentIndex].alt,\n          className: \"metrics-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-counter\",\n          children: [currentIndex + 1, \"/\", metricsImages.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevSlide,\n          className: \"slideshow-control-btn\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextSlide,\n          className: \"slideshow-control-btn\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MetricsSlideshow, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = MetricsSlideshow;\nexport default MetricsSlideshow;\nvar _c;\n$RefreshReg$(_c, \"MetricsSlideshow\");","map":{"version":3,"names":["React","useState","useEffect","metric1","metric2","metric3","jsxDEV","_jsxDEV","MetricsSlideshow","isOpen","onClose","_s","currentIndex","setCurrentIndex","metricsImages","src","alt","nextSlide","prevIndex","length","prevSlide","handleKeyDown","e","key","window","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Crop_Yield_React/frontend/src/components/MetricsSlideshow/MetricsSlideshow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MetricsSlideshow.css';\r\n\r\n// Import metrics images\r\nimport metric1 from '../assets/actual_vs_predicted_comparison.png';\r\nimport metric2 from '../assets/dtr_learning_curve.png';\r\nimport metric3 from '../assets/knn_learning_curve.png';\r\n// Add more imports as needed based on your actual metric images\r\n\r\nconst MetricsSlideshow = ({ isOpen, onClose }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  \r\n  const metricsImages = [\r\n    { src: metric1, alt: \"Metric 1\" },\r\n    { src: metric2, alt: \"Metric 2\" },\r\n    { src: metric3, alt: \"Metric 3\" },\r\n    // Add more metric images as needed\r\n  ];\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === metricsImages.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === 0 ? metricsImages.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  // Close the slideshow when Escape key is pressed\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      } else if (e.key === 'ArrowRight') {\r\n        nextSlide();\r\n      } else if (e.key === 'ArrowLeft') {\r\n        prevSlide();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"metrics-slideshow-overlay\">\r\n      <div className=\"metrics-slideshow-container\">\r\n        <button className=\"close-button\" onClick={onClose}>Ã—</button>\r\n        \r\n        <div className=\"slideshow-content\">\r\n          <img \r\n            src={metricsImages[currentIndex].src} \r\n            alt={metricsImages[currentIndex].alt}\r\n            className=\"metrics-image\"\r\n          />\r\n          <div className=\"image-counter\">\r\n            {currentIndex + 1}/{metricsImages.length}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"slideshow-controls\">\r\n          <button onClick={prevSlide} className=\"slideshow-control-btn\">Previous</button>\r\n          <button onClick={nextSlide} className=\"slideshow-control-btn\">Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricsSlideshow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}